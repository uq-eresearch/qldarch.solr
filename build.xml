<?xml version="1.0" encoding="UTF-8"?>
<project name="ingest">
    <!-- $ ant usage will print a summary of the toplevel targets for this project. -->
    <!-- $ ant classpaths will print a summary of the classpath contents. -->

    <!-- This build script defines a basic build process with the following toplevel targets -->
    <!--    clean: Deletes all directories generated by subsequent targets. -->
    <!--    init: Creates any directories required by subsequent targets. -->

    <!-- Load any passwords or other properties that should not be checked into git. -->
    <!-- NOTE#1: the .gitignore file should list 'secret.properties'. -->
    <!-- NOTE#2: there should be a sample.secret.properties file documenting properties. -->
    <!--         used by this build. -->
    <property file="secret.properties" />

    <!-- Used to identify the jar file generated by dist. -->
    <!-- NOTE#1: dist also generates an unversioned jar file to allow easy inclusion in -->
    <!--         downstream build automation. This file should not be distributed outside -->
    <!--         a controlled build environment. -->
    <property name="project.name" value="qldarch-ingest"/>
    <property name="project.version" value="0.0.1"/>

    <property name="src" location="src"/>
    <property name="build" location="build"/>
    <property name="lib" location="lib"/>
    <property name="src.main.java" location="${src}/main/java"/>
    <property name="src.test.java" location="${src}/test/java"/>
    <property name="src.main.resources" location="${src}/main/resources"/>
    <property name="src.test.resources" location="${src}/test/resources"/>
    <property name="build.main.java" location="${build}/jvm/classes"/>
    <property name="build.test.java" location="${build}/test/classes"/>
    <property name="dist"  location="C:\opt\cygwin\home\uqsmcnau\transcript"/>
    <property name="test.dir" location="test"/>
    <property name="test.data.dir" location="${test.dir}/data"/>
    <property name="reports.dir" location="${test.dir}/reports"/>

    <taskdef name="one-jar" classname="com.simontuffs.onejar.ant.OneJarTask" onerror="report">
        <classpath>
            <pathelement location="${lib}/build/one-jar-ant-task-0.97.jar"/>
        </classpath>
    </taskdef>
    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="${lib}/build/ant-contrib-1.0b3.jar" />
        </classpath>
    </taskdef>

    <target name="usage">
<echo>This build script defines a basic build process with the following toplevel targets:
    usage: Displays this message.
    classpaths: Displays the contents of the classpaths used by compile targets.
    clean: Deletes all directories generated by subsequent targets.
    all: Equivalent to "init test dist itest"
    init: Creates any directories required by subsequent targets.
    generate: Runs any generation targets required to generate source files required by the build.
    compile: Compiles all sources found in src/main/ and generated/main/.
    test.compile: Compiles all sources found in src/test/.
    test: Runs any unit tests found in src/test/.
    dist: Builds any jar, war, or other files and places them in dist/.
    itest: Runs any integration tests found in src/test/.
    deploy: Deploys any results of dist into local sandbox.
</echo>
    </target>

    <path id="classpath.compile">
        <path location="${src.main.resources}"/>
        <fileset dir="${lib}">
            <include name="**/*.jar"/>
            <exclude name="test/**.jar"/>
        </fileset>
    </path>

    <path id="classpath.test">
        <path location="${build.main.java}"/>
        <path location="${src.test.resources}"/>
        <fileset dir="${lib}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="classpath.itest">
        <path refid="classpath.test"/>
        <pathelement location="${build.test.java}"/>
    </path>

    <target name="classpaths">
        <pathconvert pathsep="${line.separator}" property="classpath.compile.prop" refid="classpath.compile" />
        <echo message="Compling with classpath=${classpath.compile.prop}" />
        <pathconvert pathsep="${line.separator}" property="classpath.test.prop" refid="classpath.test" />
        <echo message="Testing with classpath=${classpath.test.prop}" />
        <pathconvert pathsep="${line.separator}" property="classpath.itest.prop" refid="classpath.itest" />
        <echo message="Integrated Testing with classpath=${classpath.itest.prop}" />
    </target>

    <target name="all" depends="init,test,dist,itest"/>

    <target name="clean">
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
        <delete dir="${reports.dir}"/>
    </target>

    <target name="init">
        <mkdir dir="${build.main.java}"/>
        <mkdir dir="${build.test.java}"/>
        <mkdir dir="${dist}"/>
        <mkdir dir="${reports.dir}"/>
    </target>

    <target name="generate" depends="init"/>

    <target name="compile" depends="generate">
        <pathconvert pathsep="${line.separator}" property="classpath.compile.prop" refid="classpath.compile" />
        <echo message="Compling with classpath=${classpath.compile.prop}" />
        <javac classpathref="classpath.compile" 
            srcdir="${src.main.java}"
            destdir="${build.main.java}"
            deprecation="on"
            debug="true"
            includeantruntime="false" />
    </target>

    <target name="test.compile" depends="generate">
        <pathconvert pathsep="${line.separator}" property="classpath.test.prop" refid="classpath.test" />
        <echo message="Compling with classpath=${classpath.test.prop}" />
        <javac classpathref="classpath.test" 
            srcdir="${src.test.java}"
            destdir="${build.test.java}"
            deprecation="on"
            includeantruntime="false" />
    </target>

    <target name="test" depends="compile, test.compile"/>

    <target name="dist" depends="compile">
        <one-jar destfile="${dist}/${project.name}-${project.version}.jar" index="true">
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="One-Jar-Main-Class" value="net.qldarch.ingest.Main"/>
            </manifest>
            <main>
                <fileset dir="${build.main.java}">
                    <include name="**/*.class"/>
                </fileset>
                <fileset dir="${src.main.resources}">
                    <include name="**/*"/>
                </fileset>
            </main>
            <lib>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                    <exclude name="test/**.jar"/>
                    <exclude name="build/**.jar"/>
                </fileset>
            </lib>
        </one-jar>
        <copy file="${dist}/${project.name}-${project.version}.jar" tofile="${dist}/${project.name}.jar" />
    </target>

    <target name="itest" depends="dist,test.compile">
        <junit printsummary="yes" haltonfailure="yes" fork="yes">
            <formatter type="brief"/>
            <classpath refid="classpath.itest"/>
            <batchtest fork="yes" todir="${reports.dir}">
                <fileset dir="${build.test.java}">
                    <include name="**/*Test.class"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="deploy" depends="dist">
    </target>
</project>
